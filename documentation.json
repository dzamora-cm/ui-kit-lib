{
    "pipes": [],
    "interfaces": [
        {
            "name": "Option",
            "id": "interface-Option-581fd49372126cf2b6011f31f82def8bee5201666f52491897c98c699df665bdd29e3adc5d928eda889bb208450c1ec679e07540ff7512f138736e2ca852d7fc",
            "file": "projects/src/lib/components/dropdown/dropdown.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormControl,\n  UntypedFormGroup,\n} from '@angular/forms';\n\nexport interface Option {\n  name: string | null;\n  code: string | null;\n}\n\n@Component({\n  selector: 'ui-kit-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DropdownComponent {\n  @Input() controlName: any = 'text';\n  @Input() formGroup: UntypedFormGroup = new UntypedFormBuilder().group({\n    [this.controlName]: new UntypedFormControl(),\n  });\n  @Input() label: string = 'Hello Word';\n  @Input() options: Option[] = [];\n  @Input() showClear: boolean = false;\n  @Input() inputId: string = this.controlName;\n  @Input() hint: string = '';\n  @Input() invalid: boolean | undefined = false;\n\n  selectedCode: Option = { name: null, code: null };\n\n  constructor() {}\n}\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-6d48c769ceae14141b74c5e602e20257bc8ab9e2e088bd8c5bc6c968add497a064a42ea682a9af4e621e23b466df8832d87609a478c8699af1560391ad1ed805",
            "file": "projects/src/lib/components/button/button.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-kit-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "badge",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'pi-search'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "PositionSimple",
                    "decorators": []
                },
                {
                    "name": "isSubmit",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Hello Word'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "onClick",
                    "defaultValue": "() => {}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "Function",
                    "decorators": []
                },
                {
                    "name": "parameters",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "severity",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Severity",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Sizes",
                    "decorators": []
                },
                {
                    "name": "style",
                    "defaultValue": "'loud'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "Range",
                    "decorators": []
                },
                {
                    "name": "tooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "Position",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "actionButton",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport {\n  PositionSimple,\n  Position,\n  Severity,\n  Sizes,\n  Range,\n} from '../../shared/types';\n\n@Component({\n  selector: 'ui-kit-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ButtonComponent implements OnInit {\n  @Input() label: string = 'Hello Word';\n  @Input() severity: Severity = 'primary';\n  @Input() isSubmit: boolean = true;\n  @Input() size: Sizes = 'large';\n  @Input() style: Range = 'loud';\n  @Input() icon: string = 'pi-search';\n  @Input() iconPos: PositionSimple = 'left';\n  @Input() tooltip: string = '';\n  @Input() tooltipPosition: Position = 'top';\n  @Input() parameters: any = {};\n  @Input() onClick: Function = () => {};\n  @Input() loading: boolean = false;\n  @Input() badge: string = '';\n\n  actionButton = () => {\n    console.log(13456);\n    this.onClick(this.parameters);\n  };\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../style/global.scss\";\n\n.iu-kit-lib-button {\n  button {\n    border: none !important;\n    margin: 8q;\n    border-radius: 5px !important;\n    font-weight: 200 !important;\n    font-size: 12px !important;\n  }\n  .large {\n    button {\n      padding: 10q 24q;\n      font-size: 16px !important;\n      margin: 8q;\n    }\n  }\n  .medium {\n    button {\n      padding: 10q 16q;\n      font-size: 14px !important;\n      margin: 6q;\n    }\n  }\n  .small {\n    button {\n      padding: 5q 8q;\n      margin: 4q;\n    }\n  }\n  .p-button {\n    .pi-spinner {\n      margin-right: 6px;\n    }\n  }\n  .p-button-primary,\n  .p-tag {\n    button {\n      background-color: var(--primary-color) !important;\n    }\n  }\n  .p-button-secondary,\n  .p-tag-secondary {\n    button {\n      background-color: var(--secondary-color) !important;\n    }\n  }\n  .p-button-success,\n  .p-tag-success {\n    button {\n      background-color: var(--success-color) !important;\n    }\n  }\n  .p-button-info,\n  .p-tag-info {\n    button {\n      background-color: var(--info-color) !important;\n    }\n  }\n  .p-button-warning,\n  .p-tag-warning {\n    button {\n      background-color: var(--warning-color) !important;\n    }\n  }\n  .p-button-help,\n  .p-tag-help {\n    button {\n      background-color: var(--help-color) !important;\n    }\n  }\n  .p-button-danger,\n  .p-tag-danger {\n    button {\n      background-color: var(--danger-color) !important;\n    }\n  }\n  .primary-quiet {\n    button {\n      background-color: var(--primary-color-50);\n    }\n    span {\n      color: var(--primary-color);\n    }\n  }\n  .primary-transparent {\n    button {\n      background-color: transparent;\n      span {\n        color: var(--primary-color);\n      }\n    }\n  }\n  .secondary-quiet {\n    button {\n      background-color: var(--secondary-color-50) !important;\n      span {\n        color: var(--secondary-color) !important;\n      }\n    }\n  }\n  .secondary-transparent {\n    button {\n      background-color: transparent !important;\n      span {\n        color: var(--secondary-color) !important;\n      }\n    }\n  }\n  .success-quiet {\n    button {\n      background-color: var(--success-color-50) !important;\n      span {\n        color: var(--success-color) !important;\n      }\n    }\n  }\n  .success-transparent {\n    button {\n      background-color: transparent !important;\n      span {\n        color: var(--success-color) !important;\n      }\n    }\n  }\n  .warning-quiet {\n    button {\n      background-color: var(--warning-color-50) !important;\n      span {\n        color: var(--warning-color) !important;\n      }\n    }\n  }\n  .warning-transparent {\n    button {\n      background-color: transparent !important;\n      span {\n        color: var(--warning-color) !important;\n      }\n    }\n  }\n  .help-quiet {\n    button {\n      background-color: var(--help-color-50) !important;\n      span {\n        color: var(--help-color) !important;\n      }\n    }\n  }\n  .help-transparent {\n    button {\n      background-color: transparent !important;\n      span {\n        color: var(--help-color) !important;\n      }\n    }\n  }\n  .danger-quiet {\n    button {\n      background-color: var(--danger-color-50) !important;\n      span {\n        color: var(--danger-color) !important;\n      }\n    }\n  }\n  .danger-transparent {\n    button {\n      background-color: transparent !important;\n      span {\n        color: var(--danger-color) !important;\n      }\n    }\n  }\n  .info-quiet {\n    button {\n      background-color: var(--info-color-50) !important;\n      span {\n        color: var(--info-color) !important;\n      }\n    }\n  }\n  .info-transparent {\n    button {\n      background-color: transparent !important;\n      span {\n        color: var(--info-color) !important;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 34
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<span class=\"iu-kit-lib-button\">\n  <p-button\n    [loading]=\"loading\"\n    [type]=\"isSubmit ? 'submit' : 'button'\"\n    label=\"{{ label }}\"\n    class=\"p-button-{{ severity }} {{ size }} {{ severity }}-{{ style }}\"\n    icon=\"pi {{ !loading ? icon : '' }}\"\n    iconPos=\"{{ !loading ? iconPos : '' }}\"\n    [pTooltip]=\"tooltip\"\n    [tooltipPosition]=\"tooltipPosition\"\n    [badge]=\"badge\"\n    (click)=\"actionButton()\"\n  >\n  </p-button>\n</span>\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-2237533fdaed8d360844681f69b84258c9da3fea93ba59e8bcb7489aea096c89600d3a73d4c7f0215eb342b71709c63a72b4eab756ae51ee503175f173f0f7d0",
            "file": "projects/src/lib/components/checkbox/checkbox.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-kit-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "controlName",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "formGroup",
                    "defaultValue": "new UntypedFormBuilder().group({\n    [this.controlName]: new UntypedFormControl(),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "UntypedFormGroup",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "PositionSimple",
                    "decorators": []
                },
                {
                    "name": "severity",
                    "defaultValue": "'secondary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Severity",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormControl,\n  UntypedFormGroup,\n} from '@angular/forms';\nimport { PositionSimple, Severity } from '../../shared/types';\n\n@Component({\n  selector: 'ui-kit-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxComponent implements OnInit {\n  @Input() severity: Severity = 'secondary';\n  @Input() label: string = '';\n  @Input() labelPos: PositionSimple = 'left';\n  @Input() controlName: any = 'text';\n  @Input() formGroup: UntypedFormGroup = new UntypedFormBuilder().group({\n    [this.controlName]: new UntypedFormControl(),\n  });\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.formGroup.valueChanges.subscribe((val) => {\n      console.log(val, this.formGroup);\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../style/global.scss\";\n\n@mixin changeColorcheckbox($color, $colorHover) {\n  .p-checkbox .p-checkbox-box.p-highlight {\n    background-color: var($color);\n    border-color: var($color);\n  }\n  .p-checkbox:not(.p-checkbox-disabled) .p-checkbox-box.p-highlight:hover {\n    background-color: var($colorHover);\n    border-color: var($colorHover);\n  }\n  .p-checkbox:not(.p-checkbox-disabled) .p-checkbox-box.p-focus {\n    box-shadow: none;\n    border-color: var($color);\n  }\n  .p-checkbox:not(.p-checkbox-disabled) .p-checkbox-box:hover {\n    border-color: var($color);\n  }\n}\n\n.iu-kit-lib-checkbox {\n  .label-checkbox {\n    margin-left: 7px;\n    margin-right: 7px;\n    color: var(--neutro-color);\n    font-size: 16px;\n  }\n  .checkbox-primary {\n    @include changeColorcheckbox(--primary-color, --primary-color);\n  }\n\n  .checkbox-secondary {\n    @include changeColorcheckbox(--secondary-color, --secondary-color);\n  }\n  .checkbox-success {\n    @include changeColorcheckbox(--success-color, --success-color);\n  }\n  .checkbox-info {\n    @include changeColorcheckbox(--info-color, --info-color);\n  }\n  .checkbox-warning {\n    @include changeColorcheckbox(--warning-color, --warning-color);\n  }\n  .checkbox-help {\n    @include changeColorcheckbox(--help-color, --help-color);\n  }\n  .checkbox-danger {\n    @include changeColorcheckbox(--danger-color, --danger-color);\n  }\n}\n",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-form-field\n  *ngIf=\"formGroup\"\n  [formGroup]=\"formGroup\"\n  class=\"iu-kit-lib-checkbox\"\n>\n  <label\n    *ngIf=\"labelPos === 'left'\"\n    class=\"label-checkbox\"\n    [for]=\"controlName\"\n    >{{ label }}</label\n  >\n  <p-checkbox\n    class=\"checkbox-{{ severity }}\"\n    [binary]=\"true\"\n    [formControlName]=\"controlName\"\n    [id]=\"controlName\"\n  ></p-checkbox>\n  <label\n    *ngIf=\"labelPos === 'right'\"\n    class=\"label-checkbox\"\n    [for]=\"controlName\"\n    >{{ label }}</label\n  >\n</mat-form-field>\n"
        },
        {
            "name": "DropdownComponent",
            "id": "component-DropdownComponent-581fd49372126cf2b6011f31f82def8bee5201666f52491897c98c699df665bdd29e3adc5d928eda889bb208450c1ec679e07540ff7512f138736e2ca852d7fc",
            "file": "projects/src/lib/components/dropdown/dropdown.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-kit-dropdown",
            "styleUrls": [
                "./dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "controlName",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "formGroup",
                    "defaultValue": "new UntypedFormBuilder().group({\n    [this.controlName]: new UntypedFormControl(),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "UntypedFormGroup",
                    "decorators": []
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputId",
                    "defaultValue": "this.controlName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "invalid",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean | undefined",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Hello Word'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "Option[]",
                    "decorators": []
                },
                {
                    "name": "showClear",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selectedCode",
                    "defaultValue": "{ name: null, code: null }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Option",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormControl,\n  UntypedFormGroup,\n} from '@angular/forms';\n\nexport interface Option {\n  name: string | null;\n  code: string | null;\n}\n\n@Component({\n  selector: 'ui-kit-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DropdownComponent {\n  @Input() controlName: any = 'text';\n  @Input() formGroup: UntypedFormGroup = new UntypedFormBuilder().group({\n    [this.controlName]: new UntypedFormControl(),\n  });\n  @Input() label: string = 'Hello Word';\n  @Input() options: Option[] = [];\n  @Input() showClear: boolean = false;\n  @Input() inputId: string = this.controlName;\n  @Input() hint: string = '';\n  @Input() invalid: boolean | undefined = false;\n\n  selectedCode: Option = { name: null, code: null };\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../style/global.scss\";\n\n.ui-kit-dropdown {\n  .p-dropdown-label {\n    color: var(--neutro-color);\n  }\n  .p-dropdown-trigger-icon {\n    color: var(--primary-color);\n  }\n}\n",
                    "styleUrl": "./dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 31
            },
            "templateData": "<mat-form-field\n  class=\"ui-kit-dropdown\"\n  *ngIf=\"formGroup\"\n  [formGroup]=\"formGroup\"\n>\n  <p>{{ label }}</p>\n  <p-dropdown\n    matInput\n    [formControlName]=\"controlName\"\n    [showClear]=\"showClear\"\n    [options]=\"options\"\n    optionValue=\"code\"\n    optionLabel=\"name\"\n    [inputId]=\"inputId\"\n  ></p-dropdown>\n  <br />\n  <mat-hint *ngIf=\"invalid\">\n    {{ hint }}\n  </mat-hint>\n</mat-form-field>\n"
        },
        {
            "name": "InputNumberComponent",
            "id": "component-InputNumberComponent-3221d2cee090ff3dc75c404c5069e46d7bf03b611d5f92843437d43b58565bd1fd2a35a60dd3c9f680ca252bbe78568e49b71cd737f270129fcfa4edb6839e84",
            "file": "projects/src/lib/components/input-number/input-number.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-kit-input-number",
            "styleUrls": [
                "./input-number.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-number.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "controlName",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "currency",
                    "defaultValue": "'USD'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "formGroup",
                    "defaultValue": "new UntypedFormBuilder().group({\n    [this.controlName]: new UntypedFormControl(),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "UntypedFormGroup",
                    "decorators": []
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputId",
                    "defaultValue": "this.controlName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "invalid",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean | undefined",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "locale",
                    "defaultValue": "'en-US'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "max",
                    "defaultValue": "999999999999",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "mode",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "inputCurrencyMode",
                    "decorators": []
                },
                {
                    "name": "prefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showButtons",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showClear",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "step",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "suffix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "Position",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormControl,\n  UntypedFormGroup,\n} from '@angular/forms';\nimport { Position } from '../../shared/types';\nimport { inputCurrencyMode } from './types/input-number.type';\n\n@Component({\n  selector: 'ui-kit-input-number',\n  templateUrl: './input-number.component.html',\n  styleUrls: ['./input-number.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class InputNumberComponent {\n  @Input() controlName: any = 'text';\n  @Input() formGroup: UntypedFormGroup = new UntypedFormBuilder().group({\n    [this.controlName]: new UntypedFormControl(),\n  });\n  @Input() label: any = '';\n  @Input() tooltip: string = '';\n  @Input() tooltipPosition: Position = 'top';\n  @Input() showButtons: boolean = false;\n  @Input() inputId: string = this.controlName;\n  @Input() mode: inputCurrencyMode = '';\n  @Input() currency: string = 'USD';\n  @Input() min: number = 0;\n  @Input() max: number = 999999999999;\n  @Input() step: number = 1;\n  @Input() showClear: boolean = true;\n  @Input() locale: string = 'en-US';\n  @Input() suffix: string = '';\n  @Input() prefix: string = '';\n  @Input() hint: string = '';\n  @Input() readonly: boolean = false;\n  @Input() invalid: boolean | undefined = false;\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../style/global.scss\";\n\n.ui-ki-lib-input-number {\n  .p-inputnumber-button-group {\n    button.p-button {\n      background-color: var(--primary-color) !important;\n      border: none;\n    }\n  }\n}\n",
                    "styleUrl": "./input-number.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 37
            },
            "templateData": "<mat-form-field\n  *ngIf=\"formGroup\"\n  [formGroup]=\"formGroup\"\n  class=\"ui-ki-lib-input-number\"\n>\n  <p for=\"stacked\">{{ label }}</p>\n  <p-inputNumber\n    [inputStyleClass]=\"readonly ? 'readonly' : ''\"\n    matInput\n    [formControlName]=\"controlName\"\n    [pTooltip]=\"tooltip\"\n    [mode]=\"mode\"\n    [currency]=\"currency\"\n    [showButtons]=\"showButtons\"\n    [inputId]=\"inputId\"\n    [min]=\"min\"\n    [max]=\"max\"\n    [showClear]=\"showClear\"\n    [step]=\"step\"\n    [locale]=\"locale\"\n    [suffix]=\"suffix\"\n    [prefix]=\"prefix\"\n    [readonly]=\"readonly\"\n  >\n  </p-inputNumber>\n  <br />\n  <mat-hint *ngIf=\"invalid\">\n    {{ hint }}\n  </mat-hint>\n</mat-form-field>\n"
        },
        {
            "name": "InputTextComponent",
            "id": "component-InputTextComponent-ca0ff544800fb357436e8c8aa5bcf8a380d440b0817c1f5fca2987e60d26fb7b8c6ee634131202f8693b5c057196fc2e23b9c294828c5ebffd317d857603d263",
            "file": "projects/src/lib/components/input-text/input-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-kit-input-text",
            "styleUrls": [
                "./input-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "controlName",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "formGroup",
                    "defaultValue": "new UntypedFormBuilder().group({\n    [this.controlName]: new UntypedFormControl(),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "UntypedFormGroup",
                    "decorators": []
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'pi-search'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "PositionSimple",
                    "decorators": []
                },
                {
                    "name": "inputId",
                    "defaultValue": "this.controlName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "invalid",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean | undefined",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "tooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "Position",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormControl,\n  UntypedFormGroup,\n} from '@angular/forms';\n\nimport { PositionSimple, Position } from '../../shared/types';\n\n@Component({\n  selector: 'ui-kit-input-text',\n  templateUrl: './input-text.component.html',\n  styleUrls: ['./input-text.component.scss'],\n})\nexport class InputTextComponent implements OnInit {\n  @Input() controlName: any = 'text';\n  @Input() formGroup: UntypedFormGroup = new UntypedFormBuilder().group({\n    [this.controlName]: new UntypedFormControl(),\n  });\n  @Input() label: any = '';\n  @Input() placeholder: any = '';\n  @Input() tooltip: string = '';\n  @Input() tooltipIcon: string = '';\n  @Input() tooltipPosition: Position = 'top';\n  @Input() inputId: string = this.controlName;\n  @Input() icon: string = 'pi-search';\n  @Input() hint: string = '';\n  @Input() iconPos: PositionSimple = 'left';\n  @Input() disabled: boolean = false;\n  @Input() readonly: boolean = false;\n  @Input() invalid: boolean | undefined = false;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log(this.formGroup);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../style/global.scss\";\n",
                    "styleUrl": "./input-text.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 31
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-form-field *ngIf=\"formGroup\" [formGroup]=\"formGroup\">\n  <p>{{ label }}</p>\n  <span class=\"p-input-icon-{{ iconPos }}\">\n    <i\n      class=\"pi {{ icon }}\"\n      [pTooltip]=\"tooltipIcon\"\n      [tooltipPosition]=\"'top'\"\n    ></i>\n    <input\n      class=\"{{ disabled ? 'disabled' : '' }} {{ readonly ? 'readonly' : '' }} \"\n      pInputText\n      matInput\n      [formControlName]=\"controlName\"\n      [pTooltip]=\"tooltip\"\n      [placeholder]=\"placeholder\"\n      [id]=\"inputId\"\n      [tooltipPosition]=\"tooltipPosition\"\n      [disabled]=\"disabled\"\n      [readonly]=\"readonly\"\n    />\n  </span>\n  <br />\n  <mat-hint *ngIf=\"invalid\">\n    {{ hint }}\n  </mat-hint>\n</mat-form-field>\n"
        },
        {
            "name": "TagComponent",
            "id": "component-TagComponent-9e35c4a41c65d9a0aa8b199cd13d7cd44e9b8f35333518e5b22493d5d2abbb4ce2fdc78733ba68e32be893ee2932fb699559646df428511b58f99571ed22a32a",
            "file": "projects/src/lib/components/tag/tag.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-kit-tag",
            "styleUrls": [
                "./tag.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tag.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'View tag'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "severity",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Severity",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Severity } from './types/tag.component.type';\n\n@Component({\n  selector: 'ui-kit-tag',\n  templateUrl: './tag.component.html',\n  styleUrls: ['./tag.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TagComponent implements OnInit {\n  @Input() label: string = 'View tag';\n  @Input() severity: Severity = 'primary';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../style/global.scss\";\n\n.tag {\n  padding: 6px 10px;\n  border-radius: 40px;\n  box-shadow: none;\n}\n.p-tag {\n  background: var(--primary-color) !important;\n}\n.p-tag-success {\n  background: var(--success-color) !important;\n}\n.p-tag-info {\n  background: var(--info-color) !important;\n}\n.p-tag-warning {\n  background: var(--warning-color) !important;\n}\n.p-tag-danger {\n  background: var(--danger-color) !important;\n}\n",
                    "styleUrl": "./tag.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-tag class=\"tag {{ severity }}\" [severity]=\"severity\" [value]=\"label\"></p-tag>\n"
        }
    ],
    "modules": [
        {
            "name": "primeNgModule",
            "id": "module-primeNgModule-49618e970d1de1fc693e529710bc399a79b647be7c3a4baffffc008a642299c369f9370b6802a2582ee508809b50d9df27ec97ba009b558791089159f78d87c4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/src/lib/prime-ng.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { TagModule } from 'primeng/tag';\nimport { CheckboxModule } from 'primeng/checkbox';\n\nconst primeNgModules: any[] = [\n  ButtonModule,\n  TooltipModule,\n  InputTextModule,\n  DropdownModule,\n  InputNumberModule,\n  TagModule,\n  CheckboxModule,\n];\n\n@NgModule({\n  imports: [...primeNgModules],\n  exports: [...primeNgModules],\n})\nexport class primeNgModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiKitLibModule",
            "id": "module-UiKitLibModule-27d320e873fed30c95941f2dd8fbe85f9685864a60cbb1231afb653dd698eb36edeae9ee735bcf72b948851312dba70f9560a83fc175e48d8d236621af427f06",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/src/lib/ui-kit-lib.module.ts",
            "methods": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "sourceCode": "import { NgModule, OnInit, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PrimeNGConfig } from 'primeng/api';\nimport { primeNgModule } from './prime-ng.module';\nimport { myModules } from './my-modules.module';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\n\n@NgModule({\n  declarations: [myModules, CheckboxComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    primeNgModule,\n  ],\n  exports: [myModules],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class UiKitLibModule implements OnInit {\n  constructor(private primengConfig: PrimeNGConfig) {}\n  ngOnInit(): void {\n    this.primengConfig.ripple = true;\n  }\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "DropdownComponent"
                        },
                        {
                            "name": "InputNumberComponent"
                        },
                        {
                            "name": "InputTextComponent"
                        },
                        {
                            "name": "TagComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "primeNgModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "DropdownComponent"
                        },
                        {
                            "name": "InputNumberComponent"
                        },
                        {
                            "name": "InputTextComponent"
                        },
                        {
                            "name": "TagComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "ButtonPrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ButtonSecondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "checkbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/checkbox/Checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "defaultOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/dropDown/initial-values/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Option[]",
                "defaultValue": "[\n  { name: null, code: null },\n  { name: 'New York', code: 'NY' },\n  { name: 'Rome', code: 'RM' },\n  { name: 'London', code: 'LDN' },\n  { name: 'Istanbul', code: 'IST' },\n  { name: 'Paris', code: 'PRS' },\n  { name: 'Colombia', code: 'COL' },\n]"
            },
            {
                "name": "DropDown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/dropDown/DropDown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "InputNumber",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/input/InputNumber.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "InputText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/input/InputText.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "myModules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/src/lib/my-modules.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[\n  ButtonComponent,\n  TagComponent,\n  InputTextComponent,\n  DropdownComponent,\n  InputNumberComponent,\n  CheckboxComponent,\n]"
            },
            {
                "name": "positions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/src/lib/shared/const/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['left', 'right', 'top', 'bottom']"
            },
            {
                "name": "positionSimple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/src/lib/shared/const/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['left', 'right']"
            },
            {
                "name": "primeNgModules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/src/lib/prime-ng.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[\n  ButtonModule,\n  TooltipModule,\n  InputTextModule,\n  DropdownModule,\n  InputNumberModule,\n  TagModule,\n  CheckboxModule,\n]"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "severities",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/initial-values/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['success', 'info', 'warning', 'danger', 'primary']"
            },
            {
                "name": "severities",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/src/lib/shared/const/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'help',\n  'danger',\n]"
            },
            {
                "name": "sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/src/lib/shared/const/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['large', 'medium', 'small']"
            },
            {
                "name": "style",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/src/lib/shared/const/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['loud', 'quiet', 'transparent']"
            },
            {
                "name": "TagSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  component: ButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/checkbox/Checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CheckboxComponent>",
                "defaultValue": "(args: CheckboxComponent) => ({\n  component: CheckboxComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/dropDown/DropDown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DropdownComponent>",
                "defaultValue": "(args: DropdownComponent) => ({\n  component: DropdownComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/input/InputNumber.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputNumberComponent>",
                "defaultValue": "(args: InputNumberComponent) => ({\n  component: InputNumberComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/input/InputText.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputTextComponent>",
                "defaultValue": "(args: InputTextComponent) => ({\n  component: InputTextComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TagComponent>",
                "defaultValue": "(args: TagComponent) => ({\n  component: TagComponent,\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "inputCurrencyMode",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"decimal\" | \"currency\" | string",
                "file": "projects/src/lib/components/input-number/types/input-number.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Position",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                "file": "projects/src/lib/shared/types/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "PositionSimple",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"right\"",
                "file": "projects/src/lib/shared/types/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Range",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"loud\" | \"quiet\" | \"transparent\"",
                "file": "projects/src/lib/shared/types/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Severity",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"info\" | \"warning\" | \"help\" | \"danger\"",
                "file": "projects/src/lib/shared/types/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Severity",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"success\" | \"info\" | \"warning\" | \"danger\" | \"primary\"",
                "file": "projects/src/lib/components/tag/types/tag.component.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"large\" | \"medium\" | \"small\"",
                "file": "projects/src/lib/shared/types/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "stories/button/Button.stories.ts": [
                {
                    "name": "ButtonPrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ButtonSecondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  component: ButtonComponent,\n  props: args,\n})"
                }
            ],
            "stories/checkbox/Checkbox.stories.ts": [
                {
                    "name": "checkbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/checkbox/Checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/checkbox/Checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CheckboxComponent>",
                    "defaultValue": "(args: CheckboxComponent) => ({\n  component: CheckboxComponent,\n  props: args,\n})"
                }
            ],
            "projects/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "stories/dropDown/initial-values/index.ts": [
                {
                    "name": "defaultOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/dropDown/initial-values/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Option[]",
                    "defaultValue": "[\n  { name: null, code: null },\n  { name: 'New York', code: 'NY' },\n  { name: 'Rome', code: 'RM' },\n  { name: 'London', code: 'LDN' },\n  { name: 'Istanbul', code: 'IST' },\n  { name: 'Paris', code: 'PRS' },\n  { name: 'Colombia', code: 'COL' },\n]"
                }
            ],
            "stories/dropDown/DropDown.stories.ts": [
                {
                    "name": "DropDown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/dropDown/DropDown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/dropDown/DropDown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DropdownComponent>",
                    "defaultValue": "(args: DropdownComponent) => ({\n  component: DropdownComponent,\n  props: args,\n})"
                }
            ],
            "stories/input/InputNumber.stories.ts": [
                {
                    "name": "InputNumber",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/input/InputNumber.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/input/InputNumber.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputNumberComponent>",
                    "defaultValue": "(args: InputNumberComponent) => ({\n  component: InputNumberComponent,\n  props: args,\n})"
                }
            ],
            "stories/input/InputText.stories.ts": [
                {
                    "name": "InputText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/input/InputText.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/input/InputText.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputTextComponent>",
                    "defaultValue": "(args: InputTextComponent) => ({\n  component: InputTextComponent,\n  props: args,\n})"
                }
            ],
            "projects/src/lib/my-modules.module.ts": [
                {
                    "name": "myModules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/src/lib/my-modules.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[\n  ButtonComponent,\n  TagComponent,\n  InputTextComponent,\n  DropdownComponent,\n  InputNumberComponent,\n  CheckboxComponent,\n]"
                }
            ],
            "projects/src/lib/shared/const/index.ts": [
                {
                    "name": "positions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/src/lib/shared/const/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['left', 'right', 'top', 'bottom']"
                },
                {
                    "name": "positionSimple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/src/lib/shared/const/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['left', 'right']"
                },
                {
                    "name": "severities",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/src/lib/shared/const/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'help',\n  'danger',\n]"
                },
                {
                    "name": "sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/src/lib/shared/const/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['large', 'medium', 'small']"
                },
                {
                    "name": "style",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/src/lib/shared/const/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['loud', 'quiet', 'transparent']"
                }
            ],
            "projects/src/lib/prime-ng.module.ts": [
                {
                    "name": "primeNgModules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/src/lib/prime-ng.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[\n  ButtonModule,\n  TooltipModule,\n  InputTextModule,\n  DropdownModule,\n  InputNumberModule,\n  TagModule,\n  CheckboxModule,\n]"
                }
            ],
            "stories/tag/initial-values/index.ts": [
                {
                    "name": "severities",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/initial-values/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['success', 'info', 'warning', 'danger', 'primary']"
                }
            ],
            "stories/tag/Tag.stories.ts": [
                {
                    "name": "TagSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TagComponent>",
                    "defaultValue": "(args: TagComponent) => ({\n  component: TagComponent,\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/src/lib/components/input-number/types/input-number.type.ts": [
                {
                    "name": "inputCurrencyMode",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"decimal\" | \"currency\" | string",
                    "file": "projects/src/lib/components/input-number/types/input-number.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/src/lib/shared/types/index.ts": [
                {
                    "name": "Position",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                    "file": "projects/src/lib/shared/types/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "PositionSimple",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"right\"",
                    "file": "projects/src/lib/shared/types/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "Range",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"loud\" | \"quiet\" | \"transparent\"",
                    "file": "projects/src/lib/shared/types/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "Severity",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"info\" | \"warning\" | \"help\" | \"danger\"",
                    "file": "projects/src/lib/shared/types/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"large\" | \"medium\" | \"small\"",
                    "file": "projects/src/lib/shared/types/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/src/lib/components/tag/types/tag.component.type.ts": [
                {
                    "name": "Severity",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"success\" | \"info\" | \"warning\" | \"danger\" | \"primary\"",
                    "file": "projects/src/lib/components/tag/types/tag.component.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/src/lib/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/components/dropdown/dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/components/dropdown/dropdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Option",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/components/input-number/input-number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputNumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/components/input-text/input-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/components/tag/tag.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TagComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/my-modules.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "myModules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/prime-ng.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primeNgModules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/shared/const/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "positions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/shared/const/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "positionSimple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/shared/const/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "severities",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/shared/const/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/shared/const/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "style",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonPrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonSecondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/checkbox/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "checkbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/checkbox/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/dropDown/DropDown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropDown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/dropDown/DropDown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/dropDown/initial-values/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/input/InputNumber.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/input/InputNumber.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/input/InputText.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/input/InputText.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TagSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/initial-values/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "severities",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}