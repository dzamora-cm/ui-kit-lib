{
    "pipes": [],
    "interfaces": [
        {
            "name": "Option",
            "id": "interface-Option-8464fb07639e5b5280283c154c32909432085b0739057539e63e1079fc5675459e8afb5439e8cdb97b85ccac342c2e3b70643be5c8abab2c97256750d845b706",
            "file": "projects/src/lib/dropdown/dropdown.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormControl,\n  UntypedFormGroup,\n} from '@angular/forms';\n\nexport interface Option {\n  name: string | null;\n  code: string | null;\n}\n\n@Component({\n  selector: 'ui-kit-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DropdownComponent {\n  @Input() controlName: any = 'text';\n  @Input() formGroup: UntypedFormGroup = new UntypedFormBuilder().group({\n    text: new UntypedFormControl(),\n  });\n  @Input() label: string = 'Hello Word';\n  @Input() options: Option[] = [];\n  @Input() showClear: boolean = false;\n  selectedCode: Option = { name: '', code: '' };\n\n  constructor() {}\n}\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d494311eae06bd78c190dc5daa48040392abf3cc338b074bc54eacf7eced22c2453d54aa36383ab7f6493f9336bde92b95b44d1a7579be519fa2d92f5a21d153",
            "file": "projects/src/lib/button/button.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-kit-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "action",
                    "defaultValue": "() => {}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "Function",
                    "decorators": []
                },
                {
                    "name": "badge",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'pi-search'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "IconPosType",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Hello Word'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "parameters",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "SizesType",
                    "decorators": []
                },
                {
                    "name": "style",
                    "defaultValue": "'loud'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "StyleType",
                    "decorators": []
                },
                {
                    "name": "tooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "TooltipPositionType",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "ButtonType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "actionButton",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport {\n  ButtonType,\n  SizesType,\n  StyleType,\n  IconPosType,\n  TooltipPositionType,\n} from './types/button.type';\n\n@Component({\n  selector: 'ui-kit-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ButtonComponent implements OnInit {\n  @Input() label: string = 'Hello Word';\n  @Input() type: ButtonType = 'primary';\n  @Input() size: SizesType = 'large';\n  @Input() style: StyleType = 'loud';\n  @Input() icon: string = 'pi-search';\n  @Input() iconPos: IconPosType = 'left';\n  @Input() tooltip: string = '';\n  @Input() tooltipPosition: TooltipPositionType = 'top';\n  @Input() parameters: any = {};\n  @Input() action: Function = () => {};\n  @Input() loading: boolean = false;\n  @Input() badge: string = '';\n\n  actionButton = () => {\n    this.action(this.parameters);\n  };\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "button {\n  border: none !important;\n  margin: 8q;\n  border-radius: 5px !important;\n  font-weight: 200 !important;\n  font-size: 12px !important;\n}\n.large {\n  button {\n    padding: 10q 24q;\n    font-size: 16px !important;\n    margin: 8q;\n  }\n}\n.medium {\n  button {\n    padding: 10q 16q;\n    font-size: 14px !important;\n    margin: 6q;\n  }\n}\n.small {\n  button {\n    padding: 5q 8q;\n    margin: 4q;\n  }\n}\n.p-button {\n  .pi-spinner {\n    margin-right: 6px;\n  }\n}\n.p-button-primary,\n.p-tag {\n  button {\n    background-color: var(--primary-color) !important;\n  }\n}\n.p-button-secondary,\n.p-tag-secondary {\n  button {\n    background-color: var(--secondary-color) !important;\n  }\n}\n.p-button-success,\n.p-tag-success {\n  button {\n    background-color: var(--success-color) !important;\n  }\n}\n.p-button-info,\n.p-tag-info {\n  button {\n    background-color: var(--info-color) !important;\n  }\n}\n.p-button-warning,\n.p-tag-warning {\n  button {\n    background-color: var(--warning-color) !important;\n  }\n}\n.p-button-help,\n.p-tag-help {\n  button {\n    background-color: var(--help-color) !important;\n  }\n}\n.p-button-danger,\n.p-tag-danger {\n  button {\n    background-color: var(--danger-color) !important;\n  }\n}\n.primary-quiet {\n  background-color: var(--primary-color-50);\n  span {\n    color: var(--primary-color);\n  }\n}\n.primary-transparent {\n  button {\n    background-color: transparent;\n    span {\n      color: var(--primary-color);\n    }\n  }\n}\n.secondary-quiet {\n  button {\n    background-color: var(--secondary-color-50) !important;\n    span {\n      color: var(--secondary-color) !important;\n    }\n  }\n}\n.secondary-transparent {\n  button {\n    background-color: transparent !important;\n    span {\n      color: var(--secondary-color) !important;\n    }\n  }\n}\n.success-quiet {\n  button {\n    background-color: var(--success-color-50) !important;\n    span {\n      color: var(--success-color) !important;\n    }\n  }\n}\n.success-transparent {\n  button {\n    background-color: transparent !important;\n    span {\n      color: var(--success-color) !important;\n    }\n  }\n}\n.warning-quiet {\n  button {\n    background-color: var(--warning-color-50) !important;\n    span {\n      color: var(--warning-color) !important;\n    }\n  }\n}\n.warning-transparent {\n  button {\n    background-color: transparent !important;\n    span {\n      color: var(--warning-color) !important;\n    }\n  }\n}\n.help-quiet {\n  button {\n    background-color: var(--help-color-50) !important;\n    span {\n      color: var(--help-color) !important;\n    }\n  }\n}\n.help-transparent {\n  button {\n    background-color: transparent !important;\n    span {\n      color: var(--help-color) !important;\n    }\n  }\n}\n.danger-quiet {\n  button {\n    background-color: var(--danger-color-50) !important;\n    span {\n      color: var(--danger-color) !important;\n    }\n  }\n}\n.danger-transparent {\n  button {\n    background-color: transparent !important;\n    span {\n      color: var(--danger-color) !important;\n    }\n  }\n}\n.info-quiet {\n  button {\n    background-color: var(--info-color-50) !important;\n    span {\n      color: var(--info-color) !important;\n    }\n  }\n}\n.info-transparent {\n  button {\n    background-color: transparent !important;\n    span {\n      color: var(--info-color) !important;\n    }\n  }\n}\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 32
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-button\n  [loading]=\"loading\"\n  type=\"button\"\n  label=\"{{ label }}\"\n  class=\"p-button-{{ type }} {{ size }} {{ type }}-{{ style }}\"\n  icon=\"pi {{ !loading ? icon : '' }}\"\n  iconPos=\"{{ !loading ? iconPos : '' }}\"\n  [pTooltip]=\"tooltip\"\n  [tooltipPosition]=\"tooltipPosition\"\n  [badge]=\"badge\"\n>\n</p-button>\n"
        },
        {
            "name": "DropdownComponent",
            "id": "component-DropdownComponent-8464fb07639e5b5280283c154c32909432085b0739057539e63e1079fc5675459e8afb5439e8cdb97b85ccac342c2e3b70643be5c8abab2c97256750d845b706",
            "file": "projects/src/lib/dropdown/dropdown.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-kit-dropdown",
            "styleUrls": [
                "./dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "controlName",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "formGroup",
                    "defaultValue": "new UntypedFormBuilder().group({\n    text: new UntypedFormControl(),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "UntypedFormGroup",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Hello Word'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "Option[]",
                    "decorators": []
                },
                {
                    "name": "showClear",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selectedCode",
                    "defaultValue": "{ name: '', code: '' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Option",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormControl,\n  UntypedFormGroup,\n} from '@angular/forms';\n\nexport interface Option {\n  name: string | null;\n  code: string | null;\n}\n\n@Component({\n  selector: 'ui-kit-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DropdownComponent {\n  @Input() controlName: any = 'text';\n  @Input() formGroup: UntypedFormGroup = new UntypedFormBuilder().group({\n    text: new UntypedFormControl(),\n  });\n  @Input() label: string = 'Hello Word';\n  @Input() options: Option[] = [];\n  @Input() showClear: boolean = false;\n  selectedCode: Option = { name: '', code: '' };\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ui-kit-dropdown {\n  .p-dropdown-trigger-icon,\n  .p-dropdown-label {\n    color: var(--primary-color);\n  }\n  .p-dropdown-clear-icon,\n  .p-dropdown-clear-icon {\n    color: var(--danger-color);\n  }\n}\n",
                    "styleUrl": "./dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 27
            },
            "templateData": "<mat-form-field\n  class=\"ui-kit-dropdown\"\n  *ngIf=\"formGroup\"\n  [formGroup]=\"formGroup\"\n>\n  <p>{{ label }}</p>\n  <p-dropdown\n    matInput\n    [formControlName]=\"controlName\"\n    [showClear]=\"showClear\"\n    [options]=\"options\"\n    optionValue=\"code\"\n    optionLabel=\"name\"\n  ></p-dropdown>\n</mat-form-field>\n"
        },
        {
            "name": "InputNumberComponent",
            "id": "component-InputNumberComponent-66b13f84349ab8e5209c140fcb46e1792d2cc894802576f18a4521be2ca77773f9b099388ae6e304772519fb675b36d21caee0dcda0d37409e994d8c50df5ea0",
            "file": "projects/src/lib/input-number/input-number.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-kit-input-number",
            "styleUrls": [
                "./input-number.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-number.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "controlName",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "formGroup",
                    "defaultValue": "new UntypedFormBuilder().group({\n    [this.controlName]: new UntypedFormControl(),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "UntypedFormGroup",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "tooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "TooltipPositionType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "value17",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormControl,\n  UntypedFormGroup,\n} from '@angular/forms';\nimport { TooltipPositionType } from '../button/types/button.type';\n\n@Component({\n  selector: 'ui-kit-input-number',\n  templateUrl: './input-number.component.html',\n  styleUrls: ['./input-number.component.scss'],\n})\nexport class InputNumberComponent implements OnInit {\n  value17: number = 20;\n  @Input() controlName: any = 'text';\n  @Input() formGroup: UntypedFormGroup = new UntypedFormBuilder().group({\n    [this.controlName]: new UntypedFormControl(),\n  });\n  @Input() label: any = '';\n  @Input() tooltip: string = '';\n  @Input() tooltipPosition: TooltipPositionType = 'top';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./input-number.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-form-field *ngIf=\"formGroup\" [formGroup]=\"formGroup\">\n  <p>{{ label }}</p>\n  <p-inputNumber\n    pInputText\n    matInput\n    [formControlName]=\"controlName\"\n    [pTooltip]=\"tooltip\"\n    inputId=\"stacked\"\n    mode=\"currency\"\n    currency=\"USD\"\n  >\n  </p-inputNumber>\n</mat-form-field>\n"
        },
        {
            "name": "InputTextComponent",
            "id": "component-InputTextComponent-e45a77770add4f1515f3219e5634c4aec1363e80f43a316ca717612622bba1fa165d1854d8b57e99c2a79d250fcf669cc61e22e48edd3c9bbf7cf153327b0a5a",
            "file": "projects/src/lib/input-text/input-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-kit-input-text",
            "styleUrls": [
                "./input-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "controlName",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "formGroup",
                    "defaultValue": "new UntypedFormBuilder().group({\n    [this.controlName]: new UntypedFormControl(),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "UntypedFormGroup",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "tooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "TooltipPositionType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormControl,\n  UntypedFormGroup,\n} from '@angular/forms';\nimport { TooltipPositionType } from '../button/types/button.type';\n\n@Component({\n  selector: 'ui-kit-input-text',\n  templateUrl: './input-text.component.html',\n  styleUrls: ['./input-text.component.scss'],\n})\nexport class InputTextComponent implements OnInit {\n  @Input() controlName: any = 'text';\n  @Input() formGroup: UntypedFormGroup = new UntypedFormBuilder().group({\n    [this.controlName]: new UntypedFormControl(),\n  });\n  @Input() label: any = '';\n  @Input() placeholder: any = '';\n  @Input() tooltip: string = '';\n  @Input() tooltipPosition: TooltipPositionType = 'top';\n\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log(this.formGroup);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./input-text.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-form-field *ngIf=\"formGroup\" [formGroup]=\"formGroup\">\n  <p>{{ label }}</p>\n  <input\n    pInputText\n    matInput\n    [formControlName]=\"controlName\"\n    [pTooltip]=\"tooltip\"\n    [placeholder]=\"placeholder\"\n  />\n</mat-form-field>\n"
        },
        {
            "name": "TagComponent",
            "id": "component-TagComponent-b0983a4a5c7b1bee7b62e4bc8b06566ee6f734c3ae4ad930565be8c27372cd195bb1e7570a09e59568fceda71ca44d14395f34b1820a020f9526f3d016bea8f4",
            "file": "projects/src/lib/tag/tag.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-kit-tag",
            "styleUrls": [
                "./tag.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tag.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'View tag'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "severity",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Severity",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\ntype Severity = 'success' | 'info' | 'warning' | 'danger' | 'primary';\n\n@Component({\n  selector: 'ui-kit-tag',\n  templateUrl: './tag.component.html',\n  styleUrls: ['./tag.component.scss'],\n})\nexport class TagComponent implements OnInit {\n  @Input() label: string = 'View tag';\n  @Input() severity: Severity = 'primary';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "//@import \"../../style/global.scss\";\n\n.tag {\n  padding: 6px 10px;\n  border-radius: 4px;\n  box-shadow: none;\n}\n",
                    "styleUrl": "./tag.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-tag class=\"tag {{ severity }}\" [severity]=\"severity\" [value]=\"label\"></p-tag>\n"
        }
    ],
    "modules": [
        {
            "name": "primeNgModule",
            "id": "module-primeNgModule-21466f1e44952581a7ff7435d5dfd8e81596f47176d7416a5b134b2962f9eae04ba2321b16f0a118f96c6ed0f6da883acabb82d0da63606a5b82f37daa92bdbf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/src/lib/prime-ng.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputNumberModule } from 'primeng/inputnumber';\n\nconst primeNgModules: any[] = [\n  ButtonModule,\n  TooltipModule,\n  InputTextModule,\n  DropdownModule,\n  InputNumberModule,\n];\n\n@NgModule({\n  imports: [...primeNgModules],\n  exports: [...primeNgModules],\n})\nexport class primeNgModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiKitLibModule",
            "id": "module-UiKitLibModule-16dcec301eb4eb78d2ac7d761eb2a670e9466fad7f6a1506f197cf23839398229bd2182cffbbd4b80a62966cb9227f154a3070d83215f6d0bf92c5c4b96b27ee",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/src/lib/ui-kit-lib.module.ts",
            "methods": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "sourceCode": "import { NgModule, OnInit, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PrimeNGConfig } from 'primeng/api';\nimport { primeNgModule } from './prime-ng.module';\nimport { myModules } from './my-modules.module';\n\n@NgModule({\n  declarations: [myModules],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    primeNgModule,\n  ],\n  exports: [myModules],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class UiKitLibModule implements OnInit {\n  constructor(private primengConfig: PrimeNGConfig) {}\n  ngOnInit(): void {\n    this.primengConfig.ripple = true;\n  }\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "DropdownComponent"
                        },
                        {
                            "name": "InputNumberComponent"
                        },
                        {
                            "name": "InputTextComponent"
                        },
                        {
                            "name": "TagComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "primeNgModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "DropdownComponent"
                        },
                        {
                            "name": "InputNumberComponent"
                        },
                        {
                            "name": "InputTextComponent"
                        },
                        {
                            "name": "TagComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "ButtonPrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ButtonSecondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "buttonTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/initial-values/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'help',\n  'danger',\n]"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "defaultOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/dropDown/initial-values/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Option[]",
                "defaultValue": "[\n  { name: null, code: null },\n  { name: 'New York', code: 'NY' },\n  { name: 'Rome', code: 'RM' },\n  { name: 'London', code: 'LDN' },\n  { name: 'Istanbul', code: 'IST' },\n  { name: 'Paris', code: 'PRS' },\n  { name: 'Colombia', code: 'COL' },\n]"
            },
            {
                "name": "DropDown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/dropDown/DropDown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "iconPosType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/initial-values/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['left', 'right']"
            },
            {
                "name": "InputNumber",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/input/InputNumber.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "InputText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/input/InputText.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "myModules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/src/lib/my-modules.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[\n  ButtonComponent,\n  TagComponent,\n  InputTextComponent,\n  DropdownComponent,\n  InputNumberComponent,\n]"
            },
            {
                "name": "primeNgModules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/src/lib/prime-ng.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[\n  ButtonModule,\n  TooltipModule,\n  InputTextModule,\n  DropdownModule,\n  InputNumberModule,\n]"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "sizesTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/initial-values/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['large', 'medium', 'small']"
            },
            {
                "name": "styleType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/initial-values/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['loud', 'quiet', 'transparent']"
            },
            {
                "name": "TagSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/input/InputNumber.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputNumberComponent>",
                "defaultValue": "(args: InputNumberComponent) => ({\n  component: InputNumberComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/input/InputText.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputTextComponent>",
                "defaultValue": "(args: InputTextComponent) => ({\n  component: InputTextComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/dropDown/DropDown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DropdownComponent>",
                "defaultValue": "(args: DropdownComponent) => ({\n  component: DropdownComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/tag/Tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TagComponent>",
                "defaultValue": "(args: TagComponent) => ({\n  component: TagComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  component: ButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "tooltipPositionType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/button/initial-values/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['left', 'right', 'top', 'bottom']"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "ButtonType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"info\" | \"warning\" | \"help\" | \"danger\"",
                "file": "projects/src/lib/button/types/button.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "IconPosType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"right\"",
                "file": "projects/src/lib/button/types/button.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Severity",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"success\" | \"info\" | \"warning\" | \"danger\" | \"primary\"",
                "file": "projects/src/lib/tag/tag.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "SizesType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"large\" | \"medium\" | \"small\"",
                "file": "projects/src/lib/button/types/button.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "StyleType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"loud\" | \"quiet\" | \"transparent\"",
                "file": "projects/src/lib/button/types/button.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "TooltipPositionType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                "file": "projects/src/lib/button/types/button.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "stories/button/Button.stories.ts": [
                {
                    "name": "ButtonPrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ButtonSecondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  component: ButtonComponent,\n  props: args,\n})"
                }
            ],
            "stories/button/initial-values/index.ts": [
                {
                    "name": "buttonTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/initial-values/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'help',\n  'danger',\n]"
                },
                {
                    "name": "iconPosType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/initial-values/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['left', 'right']"
                },
                {
                    "name": "sizesTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/initial-values/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['large', 'medium', 'small']"
                },
                {
                    "name": "styleType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/initial-values/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['loud', 'quiet', 'transparent']"
                },
                {
                    "name": "tooltipPositionType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/button/initial-values/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['left', 'right', 'top', 'bottom']"
                }
            ],
            "projects/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "stories/dropDown/initial-values/index.ts": [
                {
                    "name": "defaultOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/dropDown/initial-values/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Option[]",
                    "defaultValue": "[\n  { name: null, code: null },\n  { name: 'New York', code: 'NY' },\n  { name: 'Rome', code: 'RM' },\n  { name: 'London', code: 'LDN' },\n  { name: 'Istanbul', code: 'IST' },\n  { name: 'Paris', code: 'PRS' },\n  { name: 'Colombia', code: 'COL' },\n]"
                }
            ],
            "stories/dropDown/DropDown.stories.ts": [
                {
                    "name": "DropDown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/dropDown/DropDown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/dropDown/DropDown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DropdownComponent>",
                    "defaultValue": "(args: DropdownComponent) => ({\n  component: DropdownComponent,\n  props: args,\n})"
                }
            ],
            "stories/input/InputNumber.stories.ts": [
                {
                    "name": "InputNumber",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/input/InputNumber.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/input/InputNumber.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputNumberComponent>",
                    "defaultValue": "(args: InputNumberComponent) => ({\n  component: InputNumberComponent,\n  props: args,\n})"
                }
            ],
            "stories/input/InputText.stories.ts": [
                {
                    "name": "InputText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/input/InputText.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/input/InputText.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputTextComponent>",
                    "defaultValue": "(args: InputTextComponent) => ({\n  component: InputTextComponent,\n  props: args,\n})"
                }
            ],
            "projects/src/lib/my-modules.module.ts": [
                {
                    "name": "myModules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/src/lib/my-modules.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[\n  ButtonComponent,\n  TagComponent,\n  InputTextComponent,\n  DropdownComponent,\n  InputNumberComponent,\n]"
                }
            ],
            "projects/src/lib/prime-ng.module.ts": [
                {
                    "name": "primeNgModules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/src/lib/prime-ng.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[\n  ButtonModule,\n  TooltipModule,\n  InputTextModule,\n  DropdownModule,\n  InputNumberModule,\n]"
                }
            ],
            "stories/tag/Tag.stories.ts": [
                {
                    "name": "TagSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/tag/Tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TagComponent>",
                    "defaultValue": "(args: TagComponent) => ({\n  component: TagComponent,\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/src/lib/button/types/button.type.ts": [
                {
                    "name": "ButtonType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"info\" | \"warning\" | \"help\" | \"danger\"",
                    "file": "projects/src/lib/button/types/button.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "IconPosType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"right\"",
                    "file": "projects/src/lib/button/types/button.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "SizesType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"large\" | \"medium\" | \"small\"",
                    "file": "projects/src/lib/button/types/button.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "StyleType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"loud\" | \"quiet\" | \"transparent\"",
                    "file": "projects/src/lib/button/types/button.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "TooltipPositionType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                    "file": "projects/src/lib/button/types/button.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/src/lib/tag/tag.component.ts": [
                {
                    "name": "Severity",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"success\" | \"info\" | \"warning\" | \"danger\" | \"primary\"",
                    "file": "projects/src/lib/tag/tag.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/dropdown/dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/dropdown/dropdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Option",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/input-number/input-number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputNumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/input-text/input-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/my-modules.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "myModules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/prime-ng.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primeNgModules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/src/lib/tag/tag.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TagComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonPrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonSecondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/initial-values/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "buttonTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/initial-values/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconPosType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/initial-values/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sizesTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/initial-values/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "styleType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button/initial-values/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tooltipPositionType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/dropDown/DropDown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropDown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/dropDown/DropDown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/dropDown/initial-values/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/input/InputNumber.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/input/InputNumber.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/input/InputText.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/input/InputText.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TagSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/tag/Tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}